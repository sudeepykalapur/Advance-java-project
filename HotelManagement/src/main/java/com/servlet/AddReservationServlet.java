// src/com/servlet/AddReservationServlet.java
package com.servlet;

import com.dao.ReservationDAO;
import com.model.Reservation;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Date;

/**
 * Servlet for handling the addition of new reservations.
 * It receives reservation details from a form, creates a Reservation object,
 * and uses ReservationDAO to persist it in the database.
 */
@WebServlet("/addReservation")
public class AddReservationServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    private ReservationDAO reservationDAO;

    public void init() {
        reservationDAO = new ReservationDAO();
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Retrieve parameters from the form
        String customerName = request.getParameter("customerName");
        String roomNumber = request.getParameter("roomNumber");
        String checkInStr = request.getParameter("checkIn");
        String checkOutStr = request.getParameter("checkOut");
        String totalAmountStr = request.getParameter("totalAmount");

        // Validate and parse parameters
        if (customerName == null || customerName.trim().isEmpty() ||
            roomNumber == null || roomNumber.trim().isEmpty() ||
            checkInStr == null || checkInStr.trim().isEmpty() ||
            checkOutStr == null || checkOutStr.trim().isEmpty() ||
            totalAmountStr == null || totalAmountStr.trim().isEmpty()) {
            request.setAttribute("errorMessage", "All fields are required.");
            request.getRequestDispatcher("reservationadd.jsp").forward(request, response);
            return;
        }

        try {
            Date checkIn = Date.valueOf(checkInStr);
            Date checkOut = Date.valueOf(checkOutStr);
            BigDecimal totalAmount = new BigDecimal(totalAmountStr);

            // Create a new Reservation object (ID will be generated by DB)
            Reservation newReservation = new Reservation();
            newReservation.setCustomerName(customerName);
            newReservation.setRoomNumber(roomNumber);
            newReservation.setCheckIn(checkIn);
            newReservation.setCheckOut(checkOut);
            newReservation.setTotalAmount(totalAmount);

            // Add the reservation to the database
            boolean success = reservationDAO.addReservation(newReservation);

            if (success) {
                request.setAttribute("message", "Reservation added successfully! ID: " + newReservation.getReservationID());
            } else {
                request.setAttribute("errorMessage", "Failed to add reservation. Please try again.");
            }
        } catch (IllegalArgumentException e) {
            // Catches errors from Date.valueOf or BigDecimal constructor
            request.setAttribute("errorMessage", "Invalid date or amount format. Please use YYYY-MM-DD for dates and a valid number for amount.");
        } catch (Exception e) {
            // Catch any other unexpected errors
            e.printStackTrace();
            request.setAttribute("errorMessage", "An unexpected error occurred: " + e.getMessage());
        }

        // Forward back to the add page or a confirmation page
        request.getRequestDispatcher("reservationadd.jsp").forward(request, response);
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // If someone tries to access this servlet via GET, redirect them to the add form
        response.sendRedirect("reservationadd.jsp");
    }
}
